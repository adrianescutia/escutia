<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Escutia Blog</title>
        <link>https://escutia.me/adrian</link>
        <description>Escutia Blog</description>
        <lastBuildDate>Fri, 14 Feb 2025 15:55:21 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[You Code Go Like You Code Java]]></title>
            <link>https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos</link>
            <guid>https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos</guid>
            <pubDate>Fri, 14 Feb 2025 15:55:21 GMT</pubDate>
            <description><![CDATA[Different programming languages aren't just different syntactically. What works in one may be an anti-pattern in another.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-funny-yet-familiar-story">A Funny Yet Familiar Story<a href="https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos#a-funny-yet-familiar-story" class="hash-link" aria-label="Direct link to A Funny Yet Familiar Story" title="Direct link to A Funny Yet Familiar Story">‚Äã</a></h2>
<p>I was once in a technical interview with a senior Java developer who shared a hilarious yet painfully relatable experience. At his company, developers weren't confined to just one or two languages; they had to jump between different languages depending on the project. One day, after a code review, a senior Go developer told him:</p>
<blockquote>
<p>"<em>You code Go as if you were coding Java.</em>" üòÖ</p>
</blockquote>
<p>Oof. That hit hard. But it's also a perfect illustration of why languages aren't interchangeable.  Different programming languages aren't just different syntactically; they embody unique paradigms, styles, and philosophies. What works in one may be an anti-pattern in another. Let's dive into why this happens and what it means for the future of Java in a world filled with AI, agents, and enterprise-grade systems.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-not-all-languages-are-created-equal">Why Not All Languages Are Created Equal<a href="https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos#why-not-all-languages-are-created-equal" class="hash-link" aria-label="Direct link to Why Not All Languages Are Created Equal" title="Direct link to Why Not All Languages Are Created Equal">‚Äã</a></h2>
<p>Every programming language is born with a purpose. Go was designed for simplicity and concurrency, Python for readability and rapid development, and Java for robustness and maintainability in enterprise environments. However, the problem arises when developers bring the habits of one language into another.</p>
<p><img decoding="async" loading="lazy" alt="Which language are you coding in" src="https://escutia.me/assets/images/which-programming-language-4b7a9dfcd2634b81b1361527dce9b38f.svg" width="596" height="604" class="img_ev3q"></p>
<p>This is why learning a new language isn't just about understanding syntax; it's about adapting to a different way of thinking. Java developers moving to Go might struggle with Go's preference for composition over inheritance, its minimalistic error handling, and the lack of traditional OOP features. Similarly, a Python developer forced into Java might find themselves missing the ease of dynamic typing and concise syntax but will soon appreciate Java's strict typing and predictability in large systems.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="python-great-for-beginners-but-not-for-everything">Python: Great for Beginners, But Not for Everything<a href="https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos#python-great-for-beginners-but-not-for-everything" class="hash-link" aria-label="Direct link to Python: Great for Beginners, But Not for Everything" title="Direct link to Python: Great for Beginners, But Not for Everything">‚Äã</a></h2>
<p>Python is often hailed as one of the best languages for beginners; and for good reason:</p>
<p>‚úÖ <strong>Readability:</strong> Its simple, English-like syntax lowers the barrier to entry.<br>
<!-- -->ü™Ñ <strong>Dynamic Typing:</strong> No need to worry about variable declarations.<br>
<!-- -->üìö <strong>Large Community &amp; Libraries:</strong> A wealth of resources available for everything from web development to AI.</p>
<p>But here's the catch; Python is not the best language for everything. While its flexibility is a strength, it also leads to some issues:</p>
<p>üåÄ <strong>Messy Code &amp; Maintainability:</strong> Since Python allows multiple ways to solve the same problem, different developers may write wildly different code styles, making large projects harder to maintain, understand, and follow up.<br>
<!-- -->ü¶• <strong>Performance Concerns:</strong>&nbsp;Python is interpreted and dynamically typed, so it is significantly slower than compiled languages like Java, Go, or C++.<br>
<!-- -->üìà <strong>Scalability Issues:</strong> Python's looseness can lead to unintentional bugs and performance bottlenecks in large-scale enterprise applications.</p>
<p>Python has dominated AI and data science not because it's the best language for every application but because of its early adoption in these fields, its rich ecosystem of libraries (NumPy, <a href="https://www.tensorflow.org/" target="_blank" rel="noopener noreferrer">TensorFlow</a>, <a href="https://pytorch.org/" target="_blank" rel="noopener noreferrer">PyTorch</a>), and the fact that AI workloads are largely <a href="https://opencv.org/blog/pytorch-vs-tensorflow/#h-key-features" target="_blank" rel="noopener noreferrer">GPU-bound</a>, making Python's CPU performance less of a concern.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-rise-of-ai-agents--javas-role">The Rise of AI Agents &amp; Java's Role<a href="https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos#the-rise-of-ai-agents--javas-role" class="hash-link" aria-label="Direct link to The Rise of AI Agents &amp; Java's Role" title="Direct link to The Rise of AI Agents &amp; Java's Role">‚Äã</a></h2>
<p>With AI agents flooding the tech landscape, there's an opening for other languages to step in. Why? Because AI isn't just about training models; it's about integrating AI into existing enterprise systems, where Python isn't always the best fit.</p>
<p>Enter Java. Java has long been a workhorse in enterprise environments, and as AI moves beyond research labs and into production systems, Java's strengths shine:</p>
<p>‚õëÔ∏è <strong>Robustness &amp; Maintainability:</strong> Java's strict typing and structured design make it ideal for mission-critical applications.<br>
<!-- -->ü¶æ <strong>Performance &amp; Scalability:</strong> Unlike Python, Java can handle high-load applications with better performance and lower memory overhead.<br>
<!-- -->üìå <strong>Interoperability:</strong> Java is deeply embedded in enterprise systems, making it easier to integrate AI-driven solutions without rewriting everything in Python.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="mcp-a-game-changer-for-java">MCP: A Game Changer for Java<a href="https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos#mcp-a-game-changer-for-java" class="hash-link" aria-label="Direct link to MCP: A Game Changer for Java" title="Direct link to MCP: A Game Changer for Java">‚Äã</a></h2>
<p>One of the most significant developments for Java's future in AI is the MCP (Model Context Protocol, a protocol defined by Anthropic) initiative. Java is now evolving to be:</p>
<p>‚òÅÔ∏è <strong>More Cloud-Native:</strong> Emphasizing lightweight, scalable applications. See <a href="https://quarkus.io/guides/#categories=cloud" target="_blank" rel="noopener noreferrer">Quarkus</a> and <a href="https://spring.io/projects/spring-cloud" target="_blank" rel="noopener noreferrer">Spring</a>.<br>
<!-- -->ü§πüèº‚Äç‚ôÇÔ∏è <strong>Better Suited for AI &amp; Microservices:</strong> As frameworks like <a href="https://spring.io/projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a> and <a href="https://jakarta.ee/" target="_blank" rel="noopener noreferrer">Jakarta EE</a> evolve, Java can support AI workloads and distributed architectures more efficiently.<br>
<!-- -->üß≠ <strong>A First-Class Citizen in AI &amp; Enterprise Integration:</strong> Java isn't just surviving; it's thriving in the modern AI era.</p>
<p>Thanks to initiatives like MCP, <a href="https://github.com/quarkiverse/quarkus-mcp-server" target="_blank" rel="noopener noreferrer">Quarkus MCP</a>, <a href="https://www.jbang.dev/" target="_blank" rel="noopener noreferrer">JBash</a>, and <a href="https://agentico.dev/" target="_blank" rel="noopener noreferrer">Agentico</a>, Java is becoming a more attractive option for AI-driven applications, bridging the gap between AI models and enterprise systems.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-does-this-mean-for-java-developers">What Does This Mean for Java Developers?<a href="https://escutia.me/adrian/you-code-go-like-you-code-java-donts-dos#what-does-this-mean-for-java-developers" class="hash-link" aria-label="Direct link to What Does This Mean for Java Developers?" title="Direct link to What Does This Mean for Java Developers?">‚Äã</a></h2>
<p>Python has been considered the go-to language for AI for years, but as AI shifts from R&amp;D to real-world applications, Java is poised to become indispensable. Enterprises need robust, secure, and scalable solutions, and Java offers precisely that.</p>
<p><strong>So, what's the takeaway?</strong></p>
<p><img decoding="async" loading="lazy" alt="Java Python Balance" src="https://escutia.me/assets/images/java-python-balance-882491b46ed59588bd218e642476ca1e.svg" width="578" height="362" class="img_ev3q"></p>
<p>üß¨ If you're a Java developer, embrace the evolving role of Java in AI and enterprise systems. Learn about MCP, Quarkus, and other AI tools to stay ahead of the curve.
üõü If you're a polyglot developer, respect the paradigms of each language; don't write Go as if it were Java! üòú<br>
<!-- -->üó∫Ô∏è If you're building AI-powered applications, consider the whole picture; Python is great for AI models, but Java might be the right choice for production systems and backend integrations (AI Tools).</p>
<p>What do you think? Is Java poised for a new era in AI and enterprise? Or will Python continue to dominate the AI space? Let's discuss it!</p>
<p>Go Rebels! ‚úäüèª</p>]]></content:encoded>
            <category>Java</category>
            <category>Artificial Intelligence</category>
            <category>Model Context Protocol</category>
        </item>
        <item>
            <title><![CDATA[Java is Powerful, But Ain't Easy to Use]]></title>
            <link>https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use</link>
            <guid>https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use</guid>
            <pubDate>Wed, 12 Feb 2025 09:16:30 GMT</pubDate>
            <description><![CDATA[Java is a powerful programming languages, widely used in enterprise applications, and large-scale systems. Yet, is not known for being beginner-friendly.]]></description>
            <content:encoded><![CDATA[<p>Java is a powerful programming languages, widely used in enterprise applications, and large-scale systems. Yet, is not known for being beginner-friendly, until JBang comes to the rescue. Let's discuss the Love-Hate relationship with Java and how to make it easier to learn and use.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-love-hate-relationship-with-java">The Love-Hate Relationship with Java<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#the-love-hate-relationship-with-java" class="hash-link" aria-label="Direct link to The Love-Hate Relationship with Java" title="Direct link to The Love-Hate Relationship with Java">‚Äã</a></h2>
<p>Java is one of the most powerful programming languages, widely used in enterprise applications, Android development, and large-scale systems. Yet, despite its strengths, Java is not exactly known for being beginner-friendly. Even seasoned Java developers acknowledge that the learning curve is steep compared to other modern languages. This is where languages like Python and JavaScript shine‚Äîsimplicity makes them attractive to new developers.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-is-java-hard-to-learn">Why is Java Hard to Learn?<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#why-is-java-hard-to-learn" class="hash-link" aria-label="Direct link to Why is Java Hard to Learn?" title="Direct link to Why is Java Hard to Learn?">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-verbose-syntax">1. Verbose Syntax<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#1-verbose-syntax" class="hash-link" aria-label="Direct link to 1. Verbose Syntax" title="Direct link to 1. Verbose Syntax">‚Äã</a></h3>
<p>Compared to Python, Java requires significantly more code to perform simple tasks. Take printing a string to the console as an example:</p>
<p>Python:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Hello, World!"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Java:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">public class Main {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    public static void main(String[] args) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        System.out.println("Hello, World!");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This verbosity can be overwhelming for beginners who just want to see their first output without worrying about classes, methods, and boilerplate code.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-complicated-installation-and-setup">2. Complicated Installation and Setup<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#2-complicated-installation-and-setup" class="hash-link" aria-label="Direct link to 2. Complicated Installation and Setup" title="Direct link to 2. Complicated Installation and Setup">‚Äã</a></h3>
<p>Setting up Java requires installing the Java Development Kit (JDK), setting environment variables, and dealing with compatibility issues. Compare this to Python, which comes pre-installed on most operating systems and is ready to use instantly.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-running-and-packaging-programs-is-not-intuitive">3. Running and Packaging Programs is Not Intuitive<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#3-running-and-packaging-programs-is-not-intuitive" class="hash-link" aria-label="Direct link to 3. Running and Packaging Programs is Not Intuitive" title="Direct link to 3. Running and Packaging Programs is Not Intuitive">‚Äã</a></h3>
<p>Unlike JavaScript (with <code>npm</code> or <code>bun</code>) or Python (<code>pip</code>), Java lacks a simple package manager for easy dependency management and execution. Running Java programs outside an IDE can be a challenge, requiring explicit compilation (javac) and execution (java) commands.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="making-java-easier-meet-jbang">Making Java Easier: Meet JBang<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#making-java-easier-meet-jbang" class="hash-link" aria-label="Direct link to Making Java Easier: Meet JBang" title="Direct link to Making Java Easier: Meet JBang">‚Äã</a></h2>
<p>Wouldn't it be great if Java had an experience similar to <code>npm</code>, <code>pip</code>, or <code>bun</code>? That's exactly what <a href="https://www.jbang.dev/" target="_blank" rel="noopener noreferrer">JBang</a> brings to the table. <a href="https://github.com/jbangdev" target="_blank" rel="noopener noreferrer">JBang</a> simplifies Java development by allowing you to run Java programs <strong>without installing a JDK manually</strong>, managing dependencies effortlessly, and packaging programs into a single executable file.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="installing-jbang">Installing JBang<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#installing-jbang" class="hash-link" aria-label="Direct link to Installing JBang" title="Direct link to Installing JBang">‚Äã</a></h3>
<p>Getting started with JBang is as easy as running:</p>
<p><code>curl -Ls https://sh.jbang.dev | bash -s - app setup</code></p>
<p>This eliminates the complex JDK setup process and makes Java more approachable for beginners.</p>
<p>Other options to install JBang can be found <a href="https://www.jbang.dev/download/" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-jbang-catalog">Creating a JBang Catalog<a href="https://escutia.me/adrian/java-is-powerful-but-aint-easy-to-use#creating-a-jbang-catalog" class="hash-link" aria-label="Direct link to Creating a JBang Catalog" title="Direct link to Creating a JBang Catalog">‚Äã</a></h3>
<p>JBang allows you to create a catalog of Java scripts and share them easily:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jbang init -t jbang-catalog@jbanghub la-rebelion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd la-rebelion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jbang add alias hello.app:hello:0.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git add .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git commit -m "Initial commit"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git remote add origin &lt;your-repo-url&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git push -u origin master</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this setup, external developers can easily install and run your Java programs with:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">jbang app install hello@la-rebelion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hello</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>No manual JDK installation, no complex packaging‚Äîjust a single command to get started.</p>
<p>The Future of Java: Simplicity Meets Power</p>
<p>Java's complexity has long been a barrier for beginners, but tools like JBang are changing the game. By simplifying installation, dependency management, and execution, JBang makes Java more accessible while retaining its power.</p>
<p>If Java wants to compete with the ease of Python and JavaScript, more innovations like JBang are needed. For now, if you've been hesitant to dive into Java due to its complexity, give JBang a try‚Äîit might just change your perspective.</p>
<hr>
<p>Image by: <a href="https://unsplash.com/@matiasmalka" target="_blank" rel="noopener noreferrer">Matias Malka</a> at <a href="https://unsplash.com/photos/man-in-red-long-sleeve-shirt-sitting-in-front-of-table-with-laptop-computer-TZIH-fDKzvY?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener noreferrer">Unsplash</a></p>]]></content:encoded>
            <category>Java</category>
        </item>
        <item>
            <title><![CDATA[How to remove a file from Git commit history]]></title>
            <link>https://escutia.me/adrian/remove-a-file-from-git-history</link>
            <guid>https://escutia.me/adrian/remove-a-file-from-git-history</guid>
            <pubDate>Mon, 10 Feb 2025 12:11:54 GMT</pubDate>
            <description><![CDATA[Learn how to remove a file from Git commit history when it isn't pushed to a remote repository.]]></description>
            <content:encoded><![CDATA[<p>Sometimes, you may accidentally commit sensitive information like passwords or API keys to your Git repository. If the sensitive information is in a file like <code>.env</code>, you should remove it from the commit history to prevent it from being exposed. Oh, my... I have been there before. üò∞</p>
<p>If the <code>.env</code> file is only in your local Git repository and has not been pushed to a remote repository yet, you are kind of lucky. In this case, you can remove it from the history using an interactive rebase or by resetting the commit that added the file.</p>
<p>Here is a method to achieve this:</p>
<p>Interactive Rebase</p>
<p><strong>Start Interactive Rebase:</strong></p>
<p>Start an interactive rebase for the last few commits (adjust the number N to include the commit that added the <code>.env</code> file).</p>
<p><code>git rebase -i HEAD~N</code></p>
<p><strong>Edit the Commit:</strong></p>
<p>In the interactive rebase editor, change the command from <code>pick</code> to <strong><code>edit</code></strong> for the commit that added the <code>.env</code> file.</p>
<p><strong>Remove the File:</strong></p>
<p>Remove the <code>.env</code> file from the commit.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git rm --cached .env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git commit --amend --no-edit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Continue Rebase:</strong></p>
<p>Continue the rebase process.</p>
<p><code>git rebase --continue</code></p>
<p>Ooooh my gosh! You have successfully removed the <code>.env</code> file from the commit history. üò∞</p>
<p>If you pushed the <code>.env</code> file to a remote repository, you should consider rotating the credentials and changing the passwords or API keys. It's better to be safe than sorry. To remove the file from the commit history in a remote repository, you will need to force push the changes. However, force pushing changes to a remote repository is not recommended if you are working in a team. It can cause conflicts and make it difficult for others to work on the project. There are tools that can help you remove sensitive information from the commit history without force pushing changes. Here are a few tools you can use:</p>
<ul>
<li><a href="https://rtyley.github.io/bfg-repo-cleaner/" target="_blank" rel="noopener noreferrer">BFG Repo-Cleaner</a>.</li>
<li><a href="https://github.com/newren/git-filter-repo" target="_blank" rel="noopener noreferrer">git-filter-repo</a>.</li>
<li><a href="https://git-scm.com/docs/git-filter-branch" target="_blank" rel="noopener noreferrer">git-filter-branch</a>.</li>
</ul>
<p>I hope this helps a little and saves you from a headache. üòÖ</p>]]></content:encoded>
            <category>Git</category>
        </item>
        <item>
            <title><![CDATA[Java Enters the AI Arena with MCP and Quarkus]]></title>
            <link>https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp</link>
            <guid>https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp</guid>
            <pubDate>Mon, 10 Feb 2025 12:11:54 GMT</pubDate>
            <description><![CDATA[With the introduction of MCP into Java, thanks to the Quarkus framework, developers can now build AI-powered applications with minimal effort.]]></description>
            <content:encoded><![CDATA[<p>AI is reshaping the developer landscape, and Java refuses to be left behind. With the introduction of <a href="https://modelcontextprotocol.io/" target="_blank" rel="noopener noreferrer">Model Context Protocol</a> (MCP) into Java, thanks to the <a href="https://quarkus.io/get-started/" target="_blank" rel="noopener noreferrer">Quarkus framework</a>, developers can now build AI-powered applications with minimal effort. As Max Andersen brilliantly put it in the Quarkus Insights video: "<em>If AI doesn't come to Java, Java goes to AI.</em>"</p>
<div style="width:640px;height:360px"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ai-is-booming-but-java-has-been-left-behind">AI is Booming, But Java Has Been Left Behind<a href="https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp#ai-is-booming-but-java-has-been-left-behind" class="hash-link" aria-label="Direct link to AI is Booming, But Java Has Been Left Behind" title="Direct link to AI is Booming, But Java Has Been Left Behind">‚Äã</a></h2>
<p>AI development is exploding across industries, with Python and TypeScript leading the charge. Python has long dominated AI and machine learning due to its rich ecosystem of libraries like TensorFlow, PyTorch, and scikit-learn. Meanwhile, TypeScript is making strides in AI-powered web applications and serverless environments.</p>
<p>However, Java‚Äîdespite being a dominant force in enterprise applications‚Äîhas largely been on the sidelines of the AI revolution. Many AI frameworks and models are optimized for Python, leaving Java developers with fewer native options for integrating AI into their stacks.</p>
<p>Now, that's changing.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-mcp-model-context-protocol">What is MCP (Model Context Protocol)?<a href="https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp#what-is-mcp-model-context-protocol" class="hash-link" aria-label="Direct link to What is MCP (Model Context Protocol)?" title="Direct link to What is MCP (Model Context Protocol)?">‚Äã</a></h2>
<p>MCP is an emerging protocol that enables applications to interact with AI models using structured context, making AI-driven solutions more predictable and manageable. It simplifies the way developers feed context to AI models and retrieve meaningful responses, leveraging SSE (Server-Sent Events) transport for real-time interaction.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-is-mcp-in-java-a-big-deal">Why is MCP in Java a Big Deal?<a href="https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp#why-is-mcp-in-java-a-big-deal" class="hash-link" aria-label="Direct link to Why is MCP in Java a Big Deal?" title="Direct link to Why is MCP in Java a Big Deal?">‚Äã</a></h3>
<p>With MCP landing in Java via Quarkus, developers can:</p>
<ul>
<li>Easily integrate AI models into Java applications.</li>
<li>Use annotations to streamline AI interaction.</li>
<li>Expose AI-driven services with SSE transport for real-time responses.</li>
<li>Leverage Quarkus's fast startup times and small footprint, making it ideal for AI workloads in cloud and edge environments.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hands-on-getting-started-with-mcp-in-java">Hands-On: Getting Started with MCP in Java<a href="https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp#hands-on-getting-started-with-mcp-in-java" class="hash-link" aria-label="Direct link to Hands-On: Getting Started with MCP in Java" title="Direct link to Hands-On: Getting Started with MCP in Java">‚Äã</a></h2>
<p>If you're ready to explore this exciting new integration, check out the full <a href="https://www.youtube.com/live/qr7ysMrVxMY?si=wAmyCBDAXc7wgzn7" target="_blank" rel="noopener noreferrer">video demo here</a>; by the day this article is published, I was not able to find the MCP extension in the <a href="https://quarkus.io/guides/" target="_blank" rel="noopener noreferrer">Quarkus extension catalog</a>, but you can dive into the Quarkus MCP Server GitHub repo <a href="https://github.com/quarkiverse/quarkus-mcp-server" target="_blank" rel="noopener noreferrer">here</a> and the Quarkus MCP Servers GitHub repo <a href="https://github.com/quarkiverse/quarkus-mcp-servers" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>For those interested in expanding their AI capabilities even further, Agentico offers additional tooling for AI-powered agents in TypeScript. Learn more about it <a href="https://agentico.dev/docs/intro" target="_blank" rel="noopener noreferrer">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="whats-next">What's Next?<a href="https://escutia.me/adrian/java-enters-the-ai-arena-with-mcp#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">‚Äã</a></h2>
<p>I'll be diving deeper into how MCP can be leveraged for real-world <strong>AI applications in Java</strong>, experimenting with <a href="https://agentico.dev/" target="_blank" rel="noopener noreferrer">Agentico</a> and Quarkus to see how developers can supercharge their AI projects. Stay tuned for more insights and hands-on examples!</p>
<p>üöÄ Java meets AI ‚Äì let's build the future together! Go Rebels! ‚úäüèª</p>]]></content:encoded>
            <category>Artificial Intelligence</category>
            <category>Java</category>
        </item>
        <item>
            <title><![CDATA[Setting Bold Goals for 2025]]></title>
            <link>https://escutia.me/adrian/setting-bold-goals-for-2025</link>
            <guid>https://escutia.me/adrian/setting-bold-goals-for-2025</guid>
            <pubDate>Sun, 10 Nov 2024 16:19:02 GMT</pubDate>
            <description><![CDATA[I'm setting ambitious goals for 2025, aiming to boost my Social Selling Index (SSI) by 2 points in Industry and 3 points in my Network.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="setting-bold-goals-for-2025-my-journey-of-growth-and-knowledge-sharing">Setting Bold Goals for 2025: My Journey of Growth and Knowledge Sharing<a href="https://escutia.me/adrian/setting-bold-goals-for-2025#setting-bold-goals-for-2025-my-journey-of-growth-and-knowledge-sharing" class="hash-link" aria-label="Direct link to Setting Bold Goals for 2025: My Journey of Growth and Knowledge Sharing" title="Direct link to Setting Bold Goals for 2025: My Journey of Growth and Knowledge Sharing">‚Äã</a></h2>
<p>I've never aimed to be the smartest person in the room. I'm not a genius by any means and I don't have all the answers, but I'm always driven to push boundaries and solve problems that excite me. Recently, my blog has reached the top 3 search results for Kubernetes in airgap environments; a big win for me, because it means people are finding value in what I'm sharing. But, of course, I'm aiming even higher for that number one spot!</p>
<p><img decoding="async" loading="lazy" alt="Adrian&amp;#39;s Social Selling Index (SSI)" src="https://escutia.me/assets/images/adrian-ssi-241024-cfa15168706af2d4bf88a4d1c94f6d7e.png" width="1146" height="870" class="img_ev3q"></p>
<p>On the LinkedIn front, I just discovered the <strong>Social Selling Index (SSI)</strong>, which feels a bit like the SEO world of LinkedIn. It's been eye-opening, and it's motivated me to set some ambitious goals for 2025. I'm aiming to boost my SSI by 2 points in Industry and 3 points in my Network. It's a challenge, but challenges are where growth happens.</p>
<p>What fuels me? Creating innovative solutions, solving complex problems, and sharing that knowledge with others. I believe in a cycle: create, grow, share, and then start all over again. It's about continuous improvement and lifting others up along the way.</p>
<p>While I don't consider myself a salesperson, I know that delivering real technical solutions speaks for itself. This journey isn't just about hitting numbers; it's about helping others grow and learning together, if I can build a community around that and my personal growth goals, then I'm on the right track. Let's see where 2025 takes us.</p>
<p>::: tip</p>
<p>I know it seems like to early to be thinking about 2025, but it's never too early to set goals and start working towards them.</p>
<p>:::</p>
<p>Go boldly, and help others along the way. Go Rebels! ‚úäüèª</p>
<p>To get the content and tools I'm sharing to help you grow and learn, follow me also on:</p>
<ul>
<li>"<a href="https://rebelion.la/" target="_blank" rel="noopener noreferrer">La Rebelion</a>" - All about Kubernetes, DevOps, and Cloud Native</li>
<li><a href="https://https//www.linkedin.com/comm/mynetwork/discovery-see-all?usecase=PEOPLE_FOLLOWS&amp;followMember=adrianescutia" target="_blank" rel="noopener noreferrer">Adrian Escutia</a> - This is my personal LinkedIn profile</li>
<li><a href="https://apicove.com/" target="_blank" rel="noopener noreferrer">APICove</a> - API-First Tools to Accelerate Your Development</li>
<li><a href="https://k1s.sh/" target="_blank" rel="noopener noreferrer">K1s</a> - Simpliying Kubernetes in airgap environments</li>
</ul>]]></content:encoded>
            <category>Professional Growth</category>
            <category>Continuous Learning</category>
        </item>
        <item>
            <title><![CDATA[Vitamin vs Painkiller Developer: Balance Innovation & Crisis]]></title>
            <link>https://escutia.me/adrian/vitamin-vs-painkiller-developer</link>
            <guid>https://escutia.me/adrian/vitamin-vs-painkiller-developer</guid>
            <pubDate>Sun, 10 Nov 2024 16:19:02 GMT</pubDate>
            <description><![CDATA[Are you a vitamin or a painkiller developer? Learn how to position yourself as a painkiller developer to solve real problems and create value for your users.]]></description>
            <content:encoded><![CDATA[<p>Not all developers solve problems the same way. Some build features that are "nice to have," while others address urgent, pressing issues. The difference? They're either a "<strong>Vitamin Developer</strong>" or a "<strong>Painkiller Developer</strong>."</p>
<p>In the startups world, <a href="https://www.forbes.com/sites/georgedeeb/2014/07/24/is-your-startup-building-a-vitamin-or-a-painkiller/" target="_blank" rel="noopener noreferrer">the term "painkiller"</a> is often used to describe a product or service that solves a pressing problem for customers, it is expected to be a <strong>must-have</strong> in order to solve a pain point, while a "vitamin" is a product or service that is <strong>nice to have</strong>, but not essential, as an example, a painkiller would be a CRM system for a sales team, while a vitamin would be a team chat tool. It's something they need, not just something they want. Taking this analogy further, I think that in the tech world, the same concept applies to developers, but <strong>we need both</strong> types if we want to build a successful team less reactive and more proactive.</p>
<p>In every tech team, you'll find two types of developers. There are those who are <strong>painkillers</strong>; they fix urgent, high-priority issues, stopping the bleeding when systems go down or bugs impact customers. Then there are the <strong>vitamin developers</strong>; the ones who build long-term solutions that prevent these issues from happening in the first place. Both types are critical for the success of any team, but it's the <strong>balance between the two</strong> that creates a high-performing DevOps or IT organization.</p>
<p>This post dives deep into the <strong>vitamin vs. painkiller</strong> analogy, exploring how it applies to developers, DevOps engineers, and IT managers. We'll also cover how key cultural values like <strong>failure tolerance, curiosity, chaos under control</strong>, and a <strong>willingness to learn</strong> can transform your team into a powerhouse that not only solves today's problems but prevents tomorrow's disasters.</p>
<p><img decoding="async" loading="lazy" alt="Vitamin Developer vs Painkiller Developer" src="https://escutia.me/assets/images/vitamin-developer-vs-painkiller-developer-9ddf29ffe46884cd81ddf1dd8b953416.webp" width="1792" height="1024" class="img_ev3q"></p>
<blockquote>
<p>The best outcomes happen when proactive and reactive approaches work hand-in-hand, each informing and strengthening the other.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-the-vitamin-developer-proactive-innovation">1. The Vitamin Developer: Proactive Innovation<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#1-the-vitamin-developer-proactive-innovation" class="hash-link" aria-label="Direct link to 1. The Vitamin Developer: Proactive Innovation" title="Direct link to 1. The Vitamin Developer: Proactive Innovation">‚Äã</a></h2>
<p>Vitamin developers are the <strong>architects of long-term stability</strong>. They focus on building solutions that make systems more robust, scalable, and easier to maintain. Their work doesn't always solve immediate, high-stakes problems. Instead, it acts as a <strong>preventive measure</strong>, ensuring those problems don't arise in the first place.</p>
<p>In the world of DevOps, vitamin developers are the ones setting up <strong>automation</strong>, optimizing CI/CD pipelines, and introducing tools and frameworks that allow your team to work faster and smarter. They might not always get the spotlight because their work isn't as visible as fixing an outage, but they're the unsung heroes <strong>who prevent outages from happening at all.</strong></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-value-of-proactive-solutions">The Value of Proactive Solutions<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#the-value-of-proactive-solutions" class="hash-link" aria-label="Direct link to The Value of Proactive Solutions" title="Direct link to The Value of Proactive Solutions">‚Äã</a></h3>
<ol>
<li><strong>System Resilience</strong>: Vitamin developers build systems that can handle unexpected load spikes, recover from failures, and operate without constant oversight.</li>
<li><strong>Automation</strong>: They prioritize automating repetitive tasks, reducing the risk of human error and freeing up time for more strategic work.</li>
<li><strong>Preventive Monitoring</strong>: These developers also set up monitoring and alerting systems, allowing teams to <strong>detect potential issues</strong> before they escalate into full-blown problems.</li>
<li><strong>Continuous Improvement</strong>: Vitamin developers are always looking for ways to <strong>improve</strong>; whether it's through new tools, better processes, or optimizing existing workflows.</li>
<li><strong>Scalability</strong>: They design systems that can grow with the business, ensuring that as your user base expands, your infrastructure can handle the load.</li>
<li><strong>Security</strong>: Vitamin developers prioritize security measures, implementing best practices to protect systems from vulnerabilities and attacks.</li>
<li><strong>Technical Debt Reduction</strong>: They work to pay down technical debt, refactoring codebases and optimizing systems to reduce the risk of future issues.</li>
<li><strong>Innovation</strong>: Vitamin developers are often the ones driving innovation within a team, introducing new technologies and approaches that keep systems ahead of the curve.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-the-painkiller-developer-reactive-problem-solving">2. The Painkiller Developer: Reactive Problem Solving<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#2-the-painkiller-developer-reactive-problem-solving" class="hash-link" aria-label="Direct link to 2. The Painkiller Developer: Reactive Problem Solving" title="Direct link to 2. The Painkiller Developer: Reactive Problem Solving">‚Äã</a></h2>
<p>Painkiller developers are the <strong>firefighters</strong> of your team. When something goes wrong; whether it's an outage, security breach, or a critical bug; they're the ones who swoop in to fix things and get systems back online. Their work is <strong>high-stakes and urgent</strong>, and often comes with a lot of pressure.</p>
<p>But without painkiller developers, businesses would grind to a halt during incidents. They thrive in chaos, solving problems quickly and under pressure. Their ability to stay calm and think critically during a crisis is invaluable, especially in today's high-availability environments where downtime can cost a company millions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-value-of-reactive-solutions">The Value of Reactive Solutions<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#the-value-of-reactive-solutions" class="hash-link" aria-label="Direct link to The Value of Reactive Solutions" title="Direct link to The Value of Reactive Solutions">‚Äã</a></h3>
<ol>
<li><strong>Incident Response</strong>: Painkiller developers are the first responders in an outage or incident, quickly diagnosing and resolving the issue to minimize downtime.</li>
<li><strong>Crisis Management</strong>: They work well under pressure and are skilled at <strong>prioritizing tasks</strong> in high-stress situations, focusing on the most critical problems.</li>
<li><strong>Root Cause Analysis</strong>: Once the immediate issue is fixed, they're able to dive into the <strong>root cause</strong> to ensure it doesn't happen again.</li>
<li><strong>Knowledge of Legacy Systems</strong>: These developers are often well-versed in <strong>legacy systems</strong> and infrastructure, allowing them to troubleshoot deeply embedded issues that others might overlook.</li>
<li><strong>On-Call Support</strong>: Painkiller developers are often part of the on-call rotation, ready to respond to incidents at any time of day or night.</li>
<li><strong>Quick Fixes</strong>: They're skilled at applying <strong>temporary fixes</strong> that restore normal operations, buying time for vitamin developers to implement long-term solutions.</li>
<li><strong>Adaptability</strong>: Painkiller developers are adaptable and can switch context quickly, moving from one problem to the next without missing a beat.</li>
<li><strong>Customer Focus</strong>: They understand the impact of incidents on customers and are driven to <strong>resolve issues</strong> as quickly as possible to minimize disruption.</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-the-need-for-balance-why-both-are-critical">3. The Need for Balance: Why Both Are Critical<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#3-the-need-for-balance-why-both-are-critical" class="hash-link" aria-label="Direct link to 3. The Need for Balance: Why Both Are Critical" title="Direct link to 3. The Need for Balance: Why Both Are Critical">‚Äã</a></h2>
<p>Here's the reality: <strong>You need both types of developers.</strong></p>
<p>Painkiller developers are critical in any environment where uptime is a priority (which, let's face it, is every modern business). They keep things running smoothly by <strong>responding to critical issues</strong> in real time. But without vitamin developers, you'd be stuck in a never-ending cycle of reactive firefighting, never improving the systems or preventing future problems.</p>
<p>Vitamin developers, on the other hand, are your <strong>long-term strategic thinkers</strong>. They work to build systems that reduce the need for constant intervention. However, without painkillers, they'd lack the real-time insights that come from managing systems under stress.</p>
<p>It's the <strong>balance between proactive and reactive work</strong> that makes a tech team truly successful. Vitamin developers keep you ahead of the curve, while painkiller developers ensure you can respond when things don't go according to plan.</p>
<p>Where are you on the vitamin vs. painkiller spectrum? Are you more focused on building long-term solutions that prevent issues, or are you the first to jump in when things go wrong? Recognizing your strengths and areas for growth can help you position yourself as a <strong>well-rounded developer</strong> who can tackle any challenge that comes your way.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-culture-the-backbone-of-high-performing-teams">4. Culture: The Backbone of High-Performing Teams<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#4-culture-the-backbone-of-high-performing-teams" class="hash-link" aria-label="Direct link to 4. Culture: The Backbone of High-Performing Teams" title="Direct link to 4. Culture: The Backbone of High-Performing Teams">‚Äã</a></h2>
<p>Building a strong team of vitamin and painkiller developers starts with the <strong>right culture</strong>. This isn't just about hiring the right people; it's about fostering an environment where both types of work are respected and encouraged. Here's how the key cultural values play a role:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="failure-tolerance-a-key-to-growth">Failure Tolerance: A Key to Growth<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#failure-tolerance-a-key-to-growth" class="hash-link" aria-label="Direct link to Failure Tolerance: A Key to Growth" title="Direct link to Failure Tolerance: A Key to Growth">‚Äã</a></h3>
<p>In a culture that values <strong><a href="https://hbr.org/2002/08/the-failure-tolerant-leader" target="_blank" rel="noopener noreferrer">failure tolerance</a></strong>, developers feel safe to take risks. Vitamin developers need this when they're experimenting with new tools, frameworks, or approaches that could <strong>improve systems long-term</strong>. Painkiller developers need it when they're making fast decisions in the heat of an incident, where not every fix is perfect.</p>
<ul>
<li><strong>Failure is Part of the Process</strong>: Teams that allow failure create a <strong>learning environment</strong> where both types of developers can grow. Encourage experimentation and learning from mistakes. With a colleague in my job, we have our private team name: "Monkeys with hammer crew," because we are always trying new things and sometimes we break things. But that's how we learn. Even Monkeys fall from trees, right? üî®üêíüå≥</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="curiosity-driving-continuous-improvement">Curiosity: Driving Continuous Improvement<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#curiosity-driving-continuous-improvement" class="hash-link" aria-label="Direct link to Curiosity: Driving Continuous Improvement" title="Direct link to Curiosity: Driving Continuous Improvement">‚Äã</a></h3>
<p><strong>Curiosity</strong> fuels both types of work. Vitamin developers are constantly asking, <em>"How can we make this better?"</em> Painkiller developers ask, <em>"What caused this problem?"</em> and generate hypotheses to test. By fostering curiosity, you empower your team to not only solve problems but also to <strong>prevent them in the future</strong>.</p>
<ul>
<li><strong>Encourage Exploration</strong>: Teams should have the time and resources to <strong>explore new ideas</strong>. Whether it's testing out new DevOps tools or running experiments with chaos engineering, curiosity leads to innovation.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="chaos-under-control-a-crucial-balance">Chaos Under Control: A Crucial Balance<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#chaos-under-control-a-crucial-balance" class="hash-link" aria-label="Direct link to Chaos Under Control: A Crucial Balance" title="Direct link to Chaos Under Control: A Crucial Balance">‚Äã</a></h3>
<p>Chaos is inevitable in IT, but the best teams know how to keep it <strong>under control</strong>. Painkiller developers are often the ones managing chaos in real-time, but vitamin developers are the ones who create <strong>structures and processes</strong> to keep that chaos at bay in the future.</p>
<ul>
<li><strong>Embrace Controlled Chaos</strong>: Controlled chaos is a powerful driver of innovation. By encouraging teams to <strong>experiment and iterate</strong> even during high-stakes moments, you create resilience.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="willingness-to-learn-adapting-to-an-evolving-landscape">Willingness to Learn: Adapting to an Evolving Landscape<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#willingness-to-learn-adapting-to-an-evolving-landscape" class="hash-link" aria-label="Direct link to Willingness to Learn: Adapting to an Evolving Landscape" title="Direct link to Willingness to Learn: Adapting to an Evolving Landscape">‚Äã</a></h3>
<p>Tech evolves quickly. Whether you're a painkiller or vitamin developer, you need to have a <strong>willingness to learn</strong>. Painkiller developers need to stay up to date on the latest <strong>incident response techniques</strong> and tools, while vitamin developers need to be constantly learning about <strong>new methods for improving systems</strong>.</p>
<ul>
<li><strong>Create a Learning Culture</strong>: Encourage your team to continuously learn. Whether it's through formal training, side projects, or internal knowledge sharing, the more your team knows, the better equipped they'll be to handle future challenges.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-the-role-of-chaos-under-control">5. The Role of Chaos (Under Control)<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#5-the-role-of-chaos-under-control" class="hash-link" aria-label="Direct link to 5. The Role of Chaos (Under Control)" title="Direct link to 5. The Role of Chaos (Under Control)">‚Äã</a></h2>
<p><img decoding="async" loading="lazy" alt="Role of Chaos under control" src="https://escutia.me/assets/images/the-role-of-chaos-in-tech-and-devops-3c8c3a23ee71899dfb7121bd3f49cdfd.webp" width="1792" height="1024" class="img_ev3q"></p>
<p>In DevOps, chaos is a given. Systems break, outages happen, and unexpected events throw even the best teams into disarray. However, how your team <strong>handles that chaos</strong> determines its success. Painkiller developers thrive in these situations, quickly diagnosing and resolving issues to restore order.</p>
<p>But here's the key: chaos can be <strong>harnessed</strong>. <a href="https://www.gremlin.com/community/tutorials/chaos-engineering-the-history-principles-and-practice" target="_blank" rel="noopener noreferrer">Chaos engineering</a>; intentionally introducing failures to test system resilience; is one way vitamin developers bring <strong>order to chaos</strong>. By experimenting with controlled chaos, they can <strong>prevent future issues</strong> and make systems more robust.</p>
<ul>
<li><strong>Painkiller's Role in Chaos</strong>: They resolve chaos in real-time, applying quick fixes that restore normalcy.</li>
<li><strong>Vitamin's Role in Chaos</strong>: They study that chaos to understand its root cause and implement changes that make future disruptions less likely.</li>
</ul>
<p>By embracing chaos under control, your team can turn what might seem like a disaster into an opportunity for growth and improvement. Chaos becomes a tool for learning, a way to test systems, and a path to resilience. Talking about tools, the <a href="https://landscape.cncf.io/?group=projects-and-products&amp;view-mode=grid&amp;category=Observability+and+Analysis" target="_blank" rel="noopener noreferrer">CNCF Chaos Engineering landscape</a> is a great place to start if you want to learn more about the tools available. Breaking things on purpose is a great way to learn how to fix them when they break on their own, and doing so in a controlled environment is the best way to learn.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-willingness-to-learn-and-experiment-a-non-negotiable-trait">6. Willingness to Learn and Experiment: A Non-Negotiable Trait<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#6-willingness-to-learn-and-experiment-a-non-negotiable-trait" class="hash-link" aria-label="Direct link to 6. Willingness to Learn and Experiment: A Non-Negotiable Trait" title="Direct link to 6. Willingness to Learn and Experiment: A Non-Negotiable Trait">‚Äã</a></h2>
<p><img decoding="async" loading="lazy" alt="Willingness to Learn and Experiment" src="https://escutia.me/assets/images/willingness-to-learn-developer-b3cfa3b75a36d4a04764c9eaf9540162.webp" width="1792" height="1024" class="img_ev3q"></p>
<blockquote>
<p>Continous learning and experimentation are key traits that drive innovation and growth.</p>
</blockquote>
<p>In an industry where <strong>technology evolves constantly</strong>, a <strong>willingness to learn</strong> is non-negotiable. Developers must continually update their knowledge, whether they're tackling incidents in production or working on long-term improvements. Curiosity and experimentation are key traits that drive innovation and growth.</p>
<ul>
<li>
<p><strong>Experimentation is Key for Vitamin Developers</strong>: Innovation doesn't happen without experimentation. Encourage your vitamin developers to try new tools and approaches, even if they don't always work. This willingness to experiment leads to breakthroughs that make systems stronger in the long run.</p>
</li>
<li>
<p><strong>Painkiller Developers Learn in the Heat of the Moment</strong>: On the flip side, painkiller developers often learn through <strong>on-the-job experiences</strong>, especially when solving time-critical issues. Their real-time problem-solving often leads to insights that can be applied to future projects.</p>
</li>
</ul>
<p>By fostering a culture of learning and experimentation, you create a team that's <strong>adaptable, resilient, and always improving</strong>. Whether it's through formal training, side projects, or internal knowledge sharing, the more your team knows, the better equipped they'll be to handle future challenges.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-continuous-improvement-the-path-to-success">7. Continuous Improvement: The Path to Success<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#7-continuous-improvement-the-path-to-success" class="hash-link" aria-label="Direct link to 7. Continuous Improvement: The Path to Success" title="Direct link to 7. Continuous Improvement: The Path to Success">‚Äã</a></h2>
<p>Both vitamin and painkiller developers need to focus on <strong>continuous improvement</strong>. Whether it's by reducing the frequency of incidents or optimizing processes for faster deployments, both types of developers contribute to a cycle of <strong>iteration and improvement</strong>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="for-painkiller-developers">For Painkiller Developers:<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#for-painkiller-developers" class="hash-link" aria-label="Direct link to For Painkiller Developers:" title="Direct link to For Painkiller Developers:">‚Äã</a></h3>
<ul>
<li><strong>Learning from Failures</strong>: After every incident, conduct a <strong>post-mortem analysis</strong> to identify what went wrong and how to prevent it next time. This process should feed directly into your vitamin developers' work to improve systems; is a cycle of learning and improvement that benefits the entire team.</li>
<li><strong>Automating Incident Response</strong>: Look for opportunities to automate repetitive incident response tasks. By creating playbooks and runbooks, you can streamline your response process and reduce the time it takes to resolve issues.</li>
</ul>
<p>Tools you can use for this are <a href="https://www.pagerduty.com/platform/automation/runbook/" target="_blank" rel="noopener noreferrer">PagerDuty Runbook</a>, <a href="https://www.splunk.com/en_us/resources.html" target="_blank" rel="noopener noreferrer">Splunk</a>, [OpsGenie](<a href="https://www.ops/" target="_blank" rel="noopener noreferrer">https://www.ops</a> genie.com/), <a href="https://www.squadcast.com/product/runbooks" target="_blank" rel="noopener noreferrer">Squadcast Runbooks</a>, and <a href="https://www.xmatters.com/features/incident-response" target="_blank" rel="noopener noreferrer">xMatters</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="for-vitamin-developers">For Vitamin Developers:<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#for-vitamin-developers" class="hash-link" aria-label="Direct link to For Vitamin Developers:" title="Direct link to For Vitamin Developers:">‚Äã</a></h3>
<ul>
<li><strong>Building Resilience</strong>: Continuous improvement is essential to building more resilient systems. This involves refining processes, improving automation, and reducing the number of incidents over time. Regularly iterating on infrastructure, codebases, and workflows ensures that systems become more scalable and fault-tolerant.</li>
<li><strong>Feedback Loops</strong>: Implement feedback loops between painkiller and vitamin developers. Painkiller developers can share insights from incidents, helping vitamin developers better understand the weaknesses in current systems. This collaboration creates a <strong>cycle of learning and improvement</strong> that benefits the entire team.</li>
</ul>
<p>Tools that vitamin developers can use are <a href="https://netflix.github.io/chaosmonkey/" target="_blank" rel="noopener noreferrer">Chaos Monkey</a> from Netflix, <a href="https://www.gremlin.com/" target="_blank" rel="noopener noreferrer">Gremlin</a>, <a href="https://chaos-mesh.org/" target="_blank" rel="noopener noreferrer">Chaos Mesh</a>, and <a href="https://chaostoolkit.org/" target="_blank" rel="noopener noreferrer">Chaos Toolkit</a>. These tools allow you to simulate real-world failures in a controlled environment, helping you identify weaknesses and strengthen your systems to prevent incidents in production.</p>
<p>By focusing on continuous improvement, your team can create a culture of <strong>learning, growth, and innovation</strong>. Whether it's through post-incident reviews, automation, or feedback loops, the more your team invests in improvement, the stronger your systems will become.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="8-building-a-culture-that-supports-both-types-of-developers">8. Building a Culture That Supports Both Types of Developers<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#8-building-a-culture-that-supports-both-types-of-developers" class="hash-link" aria-label="Direct link to 8. Building a Culture That Supports Both Types of Developers" title="Direct link to 8. Building a Culture That Supports Both Types of Developers">‚Äã</a></h2>
<p>To truly balance the work of vitamin and painkiller developers, your team culture needs to support both <strong>proactive</strong> and <strong>reactive</strong> mindsets. This starts at the leadership level. Leaders must ensure that both types of work are <strong>valued equally</strong> and that team members feel empowered to contribute in different ways.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="encourage-collaboration">Encourage Collaboration<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#encourage-collaboration" class="hash-link" aria-label="Direct link to Encourage Collaboration" title="Direct link to Encourage Collaboration">‚Äã</a></h3>
<p>One of the most effective ways to balance vitamin and painkiller developers is through collaboration. Regularly bring the two groups together to share insights, learn from each other, and <strong>cross-pollinate ideas</strong>. Painkiller developers often have deep knowledge of real-world system behavior, which is invaluable for vitamin developers who are building preventive solutions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="prioritize-knowledge-sharing">Prioritize Knowledge Sharing<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#prioritize-knowledge-sharing" class="hash-link" aria-label="Direct link to Prioritize Knowledge Sharing" title="Direct link to Prioritize Knowledge Sharing">‚Äã</a></h3>
<p>Knowledge sharing is key to creating a well-rounded team. Ensure that your painkiller developers share post-incident reports and lessons learned, and that your vitamin developers document and communicate system improvements. Create a culture where <strong>knowledge flows freely</strong>, so the team can grow together.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-dedicated-time-for-proactive-work">Create Dedicated Time for Proactive Work<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#create-dedicated-time-for-proactive-work" class="hash-link" aria-label="Direct link to Create Dedicated Time for Proactive Work" title="Direct link to Create Dedicated Time for Proactive Work">‚Äã</a></h3>
<p>A common pitfall in many organizations is that reactive work tends to dominate the schedule. When firefighting takes over, vitamin developers may not get the time they need to focus on long-term improvements. To combat this, it's crucial to <strong>carve out dedicated time</strong> for proactive work. Whether it's through dedicated sprints or designated improvement days, creating space for vitamin work ensures your team isn't stuck in reactive mode forever.</p>
<p><img decoding="async" loading="lazy" src="https://cdn.statically.io/img/cdn.rebelion.la/img/Tech%20Debt%20Quadrant%20Model.png" alt="Technical Debt Quadrant Model" class="img_ev3q"></p>
<blockquote>
<p>Technical debt is a common challenge for many teams, but it can be managed effectively with the right approach.</p>
</blockquote>
<p>Take a look at my blog post about the <a href="https://rebelion.la/technical-debt-quadrant-model/" target="_blank" rel="noopener noreferrer">technical debt quadrant model</a>, to learn more about how to manage technical debt and pay it down effectively.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="celebrate-small-wins">Celebrate Small Wins<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#celebrate-small-wins" class="hash-link" aria-label="Direct link to Celebrate Small Wins" title="Direct link to Celebrate Small Wins">‚Äã</a></h3>
<p>Both painkiller and vitamin work can feel like a thankless job at times. Painkiller developers may feel the burnout of constant firefighting, while vitamin developers may get frustrated when their preventive work goes unnoticed. <strong>Celebrate small wins</strong> for both sides of the team. Recognize the quick fixes that resolve incidents, and also highlight the improvements that reduce incidents over time.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="9-embracing-a-growth-mindset-for-developers-and-managers">9. Embracing a Growth Mindset for Developers and Managers<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#9-embracing-a-growth-mindset-for-developers-and-managers" class="hash-link" aria-label="Direct link to 9. Embracing a Growth Mindset for Developers and Managers" title="Direct link to 9. Embracing a Growth Mindset for Developers and Managers">‚Äã</a></h2>
<p>Both developers and managers need to embrace a <strong>growth mindset</strong> to support the balance of vitamin and painkiller work. This means being open to learning from mistakes, staying curious about new technologies, and being willing to experiment. A growth mindset fosters <strong>continuous improvement</strong>, allowing teams to evolve and adapt to changing business needs and technological landscapes.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="for-managers">For Managers<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#for-managers" class="hash-link" aria-label="Direct link to For Managers" title="Direct link to For Managers">‚Äã</a></h3>
<ul>
<li>
<p><strong>Enable Learning Opportunities</strong>: Encourage your team to attend workshops, conferences, or online courses. Providing time and resources for learning keeps your team <strong>up-to-date</strong> with the latest industry trends and helps vitamin developers stay ahead of potential issues before they arise.</p>
</li>
<li>
<p><strong>Be a Role Model</strong>: Demonstrate the importance of both reactive and proactive approaches in your own leadership. Show your team that you value long-term innovation just as much as immediate problem-solving. <strong>Lead by example</strong> by promoting a culture of learning, resilience, and balance.</p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="for-developers">For Developers<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#for-developers" class="hash-link" aria-label="Direct link to For Developers" title="Direct link to For Developers">‚Äã</a></h3>
<ul>
<li>
<p><strong>Curiosity as a Core Value</strong>: Cultivate a <strong>curiosity-driven approach</strong> to your work. For vitamin developers, this means constantly looking for ways to optimize and improve systems. For painkiller developers, curiosity means diving deep into incidents and asking <em>"why"</em> to understand the root cause of problems.</p>
</li>
<li>
<p><strong>Adapt to Chaos</strong>: Chaos is inevitable in IT, but how you respond to it matters. Painkiller developers need to <strong>stay calm under pressure</strong>, while vitamin developers should embrace chaos as a tool for learning. Through chaos engineering, they can simulate real-world failures to strengthen systems and prevent incidents.</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-power-of-balance">The Power of Balance<a href="https://escutia.me/adrian/vitamin-vs-painkiller-developer#the-power-of-balance" class="hash-link" aria-label="Direct link to The Power of Balance" title="Direct link to The Power of Balance">‚Äã</a></h2>
<p>At the core of any successful DevOps or IT team is a <strong>balance</strong> between vitamin and painkiller developers. By building a culture that supports both proactive innovation and reactive problem-solving, you create an environment where your team can <strong>thrive</strong>. Painkiller developers will ensure your systems remain stable in the face of crises, while vitamin developers will build the resilience to prevent future incidents.</p>
<p>The most effective teams don't just react to problems; they anticipate them and continuously improve to avoid them altogether. By fostering a culture that values <strong>failure tolerance, curiosity, chaos under control</strong>, and a <strong>willingness to learn</strong>, you set your team up for long-term success. Remember, the <strong>best outcomes</strong> happen when proactive and reactive approaches work hand-in-hand, each informing and strengthening the other.</p>
<p>The best developers are those who can <strong>embrace both mindsets</strong>, but being realistic, what are the customers' needs and desires? They for sure don't want to have a system that is always down, but they also don't want to have a system that is always down because of the constant changes.</p>
<p>It's not about choosing between a <strong>painkiller</strong> or a <strong>vitamin</strong> mindset; it's about embracing both, and recognizing that <strong>together</strong>, they create a more resilient, innovative, and adaptable team.</p>
<p>What type of developer are you? How do you balance proactive and reactive work in your team? Share your thoughts in the comments below!</p>
<p>Go boldly, and help others along the way. Go Rebels! ‚úäüèª</p>]]></content:encoded>
            <category>Culture</category>
            <category>Continuous Learning</category>
        </item>
        <item>
            <title><![CDATA[Kubernetes in Airgap Environments: Climbing to the Top Spot!]]></title>
            <link>https://escutia.me/adrian/kubernetes-in-airgap-environments-search</link>
            <guid>https://escutia.me/adrian/kubernetes-in-airgap-environments-search</guid>
            <pubDate>Mon, 21 Oct 2024 12:07:27 GMT</pubDate>
            <description><![CDATA[We are one of the top 3 blogs for Kubernetes in airgap environments. The challenges of airgap environments are real, but we can overcome them together.]]></description>
            <content:encoded><![CDATA[<p>I'm excited to share some great news with you all; my blog has made it to the top 3 for <strong><a href="https://rebelion.la/install-kubernetes-docker-offline" target="_blank" rel="noopener noreferrer">Kubernetes in airgap environments</a></strong>. For those unfamiliar, airgap environments are places where there's no direct access to the internet or public registries. This poses unique challenges, especially when deploying and managing Kubernetes clusters. Seeing my work recognized for such a critical subject is incredibly rewarding, but I'm not stopping here. I'm aiming for the <strong>top spot</strong>! üéØ</p>
<p><img decoding="async" loading="lazy" alt="Search Console" src="https://escutia.me/assets/images/search-console-insights-241020-94f1ee6f615de75cbf17ca76b965ecbb.png" width="630" height="849" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-big-thanks-to-the-la-rebelion-community">A Big Thanks to the "La Rebelion" Community<a href="https://escutia.me/adrian/kubernetes-in-airgap-environments-search#a-big-thanks-to-the-la-rebelion-community" class="hash-link" aria-label="Direct link to A Big Thanks to the &quot;La Rebelion&quot; Community" title="Direct link to A Big Thanks to the &quot;La Rebelion&quot; Community">‚Äã</a></h2>
<p>I couldn't have done it without you; my community at "<a href="https://rebelion.la/" target="_blank" rel="noopener noreferrer">La Rebelion</a>". Your feedback, support, and insights have been invaluable. Each challenge and question you've shared with me has shaped the content, helping us all navigate the tough waters of airgap environments. It's all about learning together and building better solutions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="popular-topics-in-kubernetes-airgap-environments">Popular Topics in Kubernetes Airgap Environments<a href="https://escutia.me/adrian/kubernetes-in-airgap-environments-search#popular-topics-in-kubernetes-airgap-environments" class="hash-link" aria-label="Direct link to Popular Topics in Kubernetes Airgap Environments" title="Direct link to Popular Topics in Kubernetes Airgap Environments">‚Äã</a></h3>
<p>Here are some of the most popular topics we've covered:</p>
<ul>
<li><a href="https://rebelion.la/install-kubernetes-docker-offline" target="_blank" rel="noopener noreferrer">Installing Kubernetes and Docker Offline</a></li>
<li><a href="https://rebelion.la/the-easiest-kubernetes-installations-ever" target="_blank" rel="noopener noreferrer">The Easieast Kubernetes Installations Ever</a> for diffetent Kubernetes distros.</li>
<li><a href="https://rebelion.la/how-to-install-kubernetes-in-airgapped-environments-without-a-container-runtime" target="_blank" rel="noopener noreferrer">How to install Kubernetes in airgapped environments without a container runtime</a></li>
</ul>
<p><img decoding="async" loading="lazy" alt="Popular Topics" src="https://escutia.me/assets/images/popular-content-at-la-rebelion-241020-f5f9481149bf68b79f4d649b7e593f20.png" width="657" height="496" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-talk-about-your-challenges">Let's Talk About Your Challenges<a href="https://escutia.me/adrian/kubernetes-in-airgap-environments-search#lets-talk-about-your-challenges" class="hash-link" aria-label="Direct link to Let's Talk About Your Challenges" title="Direct link to Let's Talk About Your Challenges">‚Äã</a></h2>
<p>As I continue to improve the content and tools, I want to hear from you. Are you facing issues with <strong>Kubernetes in airgap environments</strong>? Or perhaps struggling with <strong>API management</strong> and integration? If so, I'm eager to help. I'm developing solutions through my tools at <a href="https://k1s.sh/" target="_blank" rel="noopener noreferrer">K1s</a> and <a href="https://apicove.com/" target="_blank" rel="noopener noreferrer">APICove</a> to address the specific pain points engineers and product managers deal with.</p>
<p>Here's where you come in: let me know what's getting in your way. Whether it's managing dependencies, handling upgrades, or creating resilient pipelines in environments with no internet, I want to know. Your challenges fuel the creation of better tools that will make your job easier.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tools-to-watch-k1s-and-skope-quest">Tools to Watch: K1s and Skope Quest<a href="https://escutia.me/adrian/kubernetes-in-airgap-environments-search#tools-to-watch-k1s-and-skope-quest" class="hash-link" aria-label="Direct link to Tools to Watch: K1s and Skope Quest" title="Direct link to Tools to Watch: K1s and Skope Quest">‚Äã</a></h2>
<p>You're likely already familiar with <a href="https://k1s.sh/" target="_blank" rel="noopener noreferrer">K1s</a>, which simplifies workflows for <strong>Kubernetes airgap environments</strong>. But I'm also working on a new tool; <a href="https://skope.quest/" target="_blank" rel="noopener noreferrer">Skope Quest</a>; designed to help manage product backlogs, particularly for <strong>software engineers</strong> and <strong>technical product managers</strong>. Think of it as a productivity booster tailored for the challenges we face in cloud-native and DevOps environments.</p>
<p>The journey doesn't stop at Kubernetes or APIs. Tools like <strong>Skope Quest</strong> will soon allow you to <strong>manage your projects more efficiently</strong>, whether you're working with code or leading a team through complex technical decisions. Stay tuned for its release!</p>
<p>These all are solutions to problems I've faced myself, and I'm excited to share them with you. I have to disclose that they're still in the early stages, and even though some are already helping many, others are still in product discovery mode. But remember, your feedback is crucial to making these tools as effective as possible.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-work-together-to-make-it-to-1">Let's Work Together to Make It to #1<a href="https://escutia.me/adrian/kubernetes-in-airgap-environments-search#lets-work-together-to-make-it-to-1" class="hash-link" aria-label="Direct link to Let's Work Together to Make It to #1" title="Direct link to Let's Work Together to Make It to #1">‚Äã</a></h2>
<p>It's clear that Kubernetes in airgap environments is a space full of challenges and innovation. By working together, we can build a community that not only solves today's problems but also shapes the future of how we work in restricted environments. I'm committed to developing more content and tools that <strong>make your life easier</strong>, and I need your feedback to get there.</p>
<p>So, let's keep the conversation going. What are you dealing with right now? How can I help you tackle the roadblocks you're facing with <strong>Kubernetes</strong> or <strong>API management</strong>? Let's team up, solve these problems together, and get to that number one spot!</p>
<hr>
<p><strong>Thank you again</strong> for the support, and stay tuned for more updates. Don't hesitate to <a href="https://https//www.linkedin.com/comm/mynetwork/discovery-see-all?usecase=PEOPLE_FOLLOWS&amp;followMember=adrianescutia" target="_blank" rel="noopener noreferrer">connect with me</a>, whether you want to collaborate, share your challenges, or simply <a href="https://go.rebelion.la/contact-us" target="_blank" rel="noopener noreferrer">say hi</a>.</p>
<p>Let's break those airgaps down, one challenge at a time. Go Rebels! ‚úäüèª</p>
<p><strong>‚Äì Adrian</strong><br>
<strong>Founder, La Rebelion</strong></p>]]></content:encoded>
            <category>Kubernetes</category>
            <category>Airgap</category>
        </item>
        <item>
            <title><![CDATA[Fixing VS Code/Code.exe: Exec format error in WSL]]></title>
            <link>https://escutia.me/adrian/fixing-vscode-code.exe--exec-format-error-in-wsl</link>
            <guid>https://escutia.me/adrian/fixing-vscode-code.exe--exec-format-error-in-wsl</guid>
            <pubDate>Sat, 19 Oct 2024 15:16:46 GMT</pubDate>
            <description><![CDATA[How to fix the Exec format error when trying to open VS Code from WSL.]]></description>
            <content:encoded><![CDATA[<p>From time to time, we run into issues that seem trivial but can be quite frustrating, when VS Code doesn't open from WSL, it can be one of those issues and it happens after a Windows update or a VS Code update. Here's how to fix it.</p>
<p>I recently ran into an issue where I couldn't open Visual Studio Code from WSL. I would get the following error:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ code .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/c/Users/adria/AppData/Local/Programs/Microsoft VS Code/bin/code: 61: /c/Users/adria/AppData/Local/Programs/Microsoft VS Code/Code.exe: Exec format error</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Read on to learn how to fix this issue.</p>
<p>This error is due to the fact that the Windows executable is not compatible with the Linux environment. The solution is to create a symbolic link to the Windows executable from the Linux environment. The solution is simple, but it can be frustrating if you don't know what to do, eventually, you might end up reinstalling VS Code or even WSL; don't do that, I got you covered.</p>
<p>Here's how to fix it:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$  sudo sh -c 'echo :WSLInterop:M::MZ::/init:PF &gt; /usr/lib/binfmt.d/WSLInterop.conf'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[sudo] password for $USER:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$  sudo systemctl unmask systemd-binfmt.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$  sudo systemctl restart systemd-binfmt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$  sudo systemctl mask systemd-binfmt.service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Created symlink /etc/systemd/system/systemd-binfmt.service ‚Üí /dev/null.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ code .</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>That's it! You should now be able to open Visual Studio Code from WSL without any issues. If you still have issues, try restarting your WSL session.</p>
<p>I hope this helps you fix the issue. If you have any questions or comments, feel free to reach out, <a href="https://go.rebelion.la/contact-us" target="_blank" rel="noopener noreferrer">send me a message here</a> or on <a href="https://https//www.linkedin.com/comm/mynetwork/discovery-see-all?usecase=PEOPLE_FOLLOWS&amp;followMember=adrianescutia" target="_blank" rel="noopener noreferrer">LinkedIn</a>. I'm always happy to help. üòä</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a href="https://escutia.me/adrian/fixing-vscode-code.exe--exec-format-error-in-wsl#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">‚Äã</a></h2>
<ul>
<li>Stack Overflow: <a href="https://stackoverflow.com/a/76975972/5078874" target="_blank" rel="noopener noreferrer">Cannot run any WSL commands/Not able to make WSL work with VS Code (Exec Format Error)</a>.</li>
<li>GitHub: <a href="https://github.com/microsoft/WSL/issues/8952#issuecomment-1568212651" target="_blank" rel="noopener noreferrer">WSL2 (Preview) cannot run .exe files: exec format error: wsl.exe</a>.</li>
<li>Image source: <a href="https://unsplash.com/@shekai" target="_blank" rel="noopener noreferrer">Shekai at Unsplash</a>.</li>
</ul>]]></content:encoded>
            <category>Visual Studio Code</category>
            <category>Windows Subsystem for Linux</category>
            <category>Visual Studio Code</category>
            <category>Troubleshooting</category>
        </item>
        <item>
            <title><![CDATA[A slight pivot in the Airgap Bundler]]></title>
            <link>https://escutia.me/adrian/update-about-airgap-tool</link>
            <guid>https://escutia.me/adrian/update-about-airgap-tool</guid>
            <pubDate>Tue, 15 Oct 2024 12:01:59 GMT</pubDate>
            <description><![CDATA[In my experiments journey, I discovered Refine, and decided to pivot slightly in the airgap tool MVP with SBOMs, Refine, and Docusaurus.]]></description>
            <content:encoded><![CDATA[<p><strong>A slight pivot in the airgap bundler tool MVP to add SBOMs.</strong></p>
<p>This weekend has been a breakthrough‚Äînot necessarily in pushing my tools forward for the community, but in expanding my knowledge. I discovered <a href="https://refine.dev/" target="_blank" rel="noopener noreferrer">Refine</a>, and it is honestly a game changer (for a backend developer like me). It lets me scaffold React projects with a robust, reusable architecture, perfect for developers and solopreneurs. Instead of wasting time reinventing the wheel, you get a clean structure right from the start. Combine this with <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a> in a mono-repo setup, and you've got limitless potential. The combination of these two can redefine how we manage documentation and dashboards in our projects.</p>
<p>That said, I'm going to dedicate another weekend (and nights) to improving the <a href="https://k1s.sh/airgap" target="_blank" rel="noopener noreferrer">airgap bundler</a> MVP or <strong>SABOR</strong> (flavor in Spanish, <strong>S</strong>oftware <strong>A</strong>irgap <strong>B</strong>ill <strong>o</strong>f Materials <strong>R</strong>esolver) as I like to call it (check the demo video below üëáüèª). I have decided to pivot slightly, the community has given great feedback so far, but after thinking it through, I realized tools like <a href="https://github.com/containers/skopeo" target="_blank" rel="noopener noreferrer">Skopeo</a> and <a href="https://github.com/google/go-containerregistry/blob/main/cmd/crane/doc/crane.md" target="_blank" rel="noopener noreferrer">Crane</a> might already be top choices for many. And while the CLI MVP has gotten positive reception, we all know the problem with CLI tools‚Äîthey are great until you're swimming in flags and options that are impossible to remember.</p>
<p>So here's the new direction: I'm going to double down on leveraging <a href="https://www.ntia.gov/page/software-bill-materials" target="_blank" rel="noopener noreferrer">SBOMs</a>. I've started with <a href="https://cyclonedx.org/" target="_blank" rel="noopener noreferrer">CycloneDX</a>, and later, introduce <a href="https://spdx.dev/" target="_blank" rel="noopener noreferrer">SPDX</a> into the mix. This will add more value, making the tool not just another CLI alternative, but one that builds on transparency and security by integrating software bills of materials into the process. Think of it as creating the ultimate airgap distribution package that's not just about bundling images, but about understanding and orchestrating them across multiple environments‚Äîwhether it is hybrid cloud or airgapped scenarios.</p>
<p><strong>Why an airgap tool?</strong> Because it's a critical piece in the puzzle of secure software distribution, and deploying cloud native and Kubernetes clusters in airgapped environments is a common challenge.</p>
<p><strong>Why SBOMs?</strong> They are the key to understanding what is in your software, and they are crucial for security, compliance, and transparency. By integrating SBOMs into the airgap bundler, we're not just creating a tool; we're creating a movement. A movement towards better software practices, better security, and better collaboration, a <strong>Rebel movement</strong>!</p>
<p>Not to mention, that the Kubernetes community is already pushing for SBOMs with <a href="https://kubernetes-sigs.github.io/bom/" target="_blank" rel="noopener noreferrer">K8s BOM tool</a>, and with the <a href="https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/" target="_blank" rel="noopener noreferrer">executive order</a> from the White House, it's clear that SBOMs are the future. So why not start now?</p>
<p>It is clear where the industry is heading, and I want to be at the forefront of it. I want to build tools that are not just useful, but essential. Tools that are not just for the community, but by the community. Tools that are not just for today, but for the future.</p>
<p>Here's a sneak peek of the new direction:</p>
<video width="620" autoplay="" loop="" muted=""><source src="/assets/medias/k1s-airgap-bundler-demo-s-1ae3e7b6e52f59990ab6ab050da6c799.mp4" type="video/mp4"><p>Your browser does not support the video tag.</p></video>
<p>Don't worry, though. I'm not abandoning the CLI. I'm simply evolving it into something smarter, more intuitive, and community-driven.</p>
<p>Let's keep this momentum going‚Äîtogether, we're building something amazing. Your feedback is crucial, so don't hesitate to share your thoughts. Let's go, Rebels! ‚úäüèª</p>
<p>Stay tuned for more updates, don't forget to subscribe to the <a href="https://go.rebelion.la/k1s-news" target="_blank" rel="noopener noreferrer">newsletter</a> for the latest news and updates. And if you haven't already, check out the <a href="https://k1s.sh/airgap" target="_blank" rel="noopener noreferrer">airgap bundler</a> MVP and let me know what you think.</p>]]></content:encoded>
            <category>Airgap</category>
            <category>SBOM</category>
            <category>Kubernetes</category>
            <category>Refine</category>
            <category>MVP</category>
        </item>
        <item>
            <title><![CDATA[The State of Software Development in 2024 from StackOverflow]]></title>
            <link>https://escutia.me/adrian/the-state-of-software-development-in-2024</link>
            <guid>https://escutia.me/adrian/the-state-of-software-development-in-2024</guid>
            <pubDate>Wed, 07 Aug 2024 02:10:29 GMT</pubDate>
            <description><![CDATA[The State of Software Development in 2024: Insights from StackOverflow's Annual Developer Survey]]></description>
            <content:encoded><![CDATA[<p>Software development is a dynamic field that constantly evolves with new technologies, tools, and practices. To understand the current state of software development, Stack Overflow conducts an annual survey of developers worldwide. The 2024 survey, featuring over 65,000 participants from 185 countries, provides valuable insights into the trends shaping the industry. This article explores the key findings of the survey and what they mean for developers and the future of software development.</p>
<p><img decoding="async" loading="lazy" alt="The State of Software Development in 2024" src="https://escutia.me/assets/images/the-state-of-software-development-in-2024-c4b0ae0ba33fb6a96f3085f8c832de5d.png" width="1326" height="780" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-findings">Key Findings<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#key-findings" class="hash-link" aria-label="Direct link to Key Findings" title="Direct link to Key Findings">‚Äã</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="javascript-reigns-supreme">JavaScript Reigns Supreme<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#javascript-reigns-supreme" class="hash-link" aria-label="Direct link to JavaScript Reigns Supreme" title="Direct link to JavaScript Reigns Supreme">‚Äã</a></h3>
<p>JavaScript popularity continues its dominance as the most popular programming language, with 62% of respondents using it regularly. Its versatility and extensive ecosystem make it a favorite among developers for both front-end and back-end development. Other popular languages include HTML/CSS (53%), Python (51%), SQL (51%), and TypeScript (38.5%).</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="trust-in-ai-a-double-edged-sword">Trust in AI: A Double-Edged Sword<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#trust-in-ai-a-double-edged-sword" class="hash-link" aria-label="Direct link to Trust in AI: A Double-Edged Sword" title="Direct link to Trust in AI: A Double-Edged Sword">‚Äã</a></h3>
<p>AI tools are increasingly integrated into developers' workflows, with 76% using or planning to use them. However, trust in these tools remains low. Only 43% of developers trust the accuracy of AI tools, and nearly half (45%) believe AI struggles with complex tasks. This highlights a significant gap between the adoption of AI and confidence in its capabilities.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="productivity-boosts-and-learning-aids">Productivity Boosts and Learning Aids<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#productivity-boosts-and-learning-aids" class="hash-link" aria-label="Direct link to Productivity Boosts and Learning Aids" title="Direct link to Productivity Boosts and Learning Aids">‚Äã</a></h3>
<p>Despite trust issues, developers acknowledge the productivity benefits of AI. 81% report that AI tools help them work more efficiently, and 71% of beginners use AI to accelerate their learning. This underscores the potential of AI to streamline coding processes and enhance educational experiences.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ethical-concerns-with-ai">Ethical Concerns with AI<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#ethical-concerns-with-ai" class="hash-link" aria-label="Direct link to Ethical Concerns with AI" title="Direct link to Ethical Concerns with AI">‚Äã</a></h3>
<p>Developers are increasingly aware of the ethical implications of AI. The top concerns include the potential for AI to spread misinformation (79%), issues with data attribution (65%), and biases that fail to represent diverse viewpoints (50%). Addressing these ethical challenges is crucial for the responsible development and deployment of AI technologies.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-rise-of-online-learning">The Rise of Online Learning<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#the-rise-of-online-learning" class="hash-link" aria-label="Direct link to The Rise of Online Learning" title="Direct link to The Rise of Online Learning">‚Äã</a></h3>
<p>Online resources remain the go-to for developers looking to learn new skills. 82% of respondents use online materials, with technical documentation (83%) and Stack Overflow (80%) being the most popular sources. Additionally, 37% of developers use AI tools for learning, indicating a growing trend towards AI-assisted education.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cloud-platform-preferences">Cloud Platform Preferences<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#cloud-platform-preferences" class="hash-link" aria-label="Direct link to Cloud Platform Preferences" title="Direct link to Cloud Platform Preferences">‚Äã</a></h3>
<p>When it comes to cloud platforms, AWS leads the pack with 48% of developers using it. Microsoft Azure and Google Cloud are also popular, with usage rates of 28% and 25%, respectively. The growing adoption of these platforms reflects the increasing reliance on cloud services for scalable and flexible infrastructure solutions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="postgresql-tops-the-database-charts">PostgreSQL Tops the Database Charts<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#postgresql-tops-the-database-charts" class="hash-link" aria-label="Direct link to PostgreSQL Tops the Database Charts" title="Direct link to PostgreSQL Tops the Database Charts">‚Äã</a></h3>
<p>PostgreSQL is the most popular database among developers, favored by 49% of respondents. However, beginners prefer MySQL (45%) and SQLite (36%), suggesting that ease of use and familiarity play significant roles in database choice during the learning phase.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vs-code-the-ide-of-choice">VS Code: The IDE of Choice<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#vs-code-the-ide-of-choice" class="hash-link" aria-label="Direct link to VS Code: The IDE of Choice" title="Direct link to VS Code: The IDE of Choice">‚Äã</a></h3>
<p>Visual Studio Code dominates the IDE landscape, used by 74% of developers. Its popularity can be attributed to its powerful features, extensive plugin ecosystem, and strong community support. Visual Studio, the next most popular IDE, is used by 29% of respondents.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="10-key-takeaways">10 Key Takeaways<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#10-key-takeaways" class="hash-link" aria-label="Direct link to 10 Key Takeaways" title="Direct link to 10 Key Takeaways">‚Äã</a></h2>
<ol>
<li>JavaScript Dominance: JavaScript is the most popular programming language, used by 62% of respondents.</li>
<li>AI Trust Issues: Only 43% of developers trust AI tools, with 45% believing AI struggles with complex tasks.</li>
<li>Database Preferences: PostgreSQL is the top database among developers, while beginners prefer MySQL and SQLite.</li>
<li>AI and Productivity: 81% of developers find AI tools boost productivity; 71% of beginners use AI to speed up learning.</li>
<li>Ethical Concerns: Top AI ethical issues include misinformation (79%) and bias (50%).</li>
<li>Learning Resources: 82% of developers use online resources for learning, with Stack Overflow and technical documentation being top choices.</li>
<li>Cloud Platforms: AWS leads as the most used cloud platform (48%), with Azure and Google Cloud also gaining ground.</li>
<li>AI Adoption: 76% of developers are using or planning to use AI tools, up from 70% last year.</li>
<li>IDE Usage: VS Code is the leading IDE, used by 74% of developers.</li>
<li>Work Communication: Microsoft Teams is the preferred tool for professional developers, while Discord is popular among those learning to code.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-future-of-software-development">The Future of Software Development<a href="https://escutia.me/adrian/the-state-of-software-development-in-2024#the-future-of-software-development" class="hash-link" aria-label="Direct link to The Future of Software Development" title="Direct link to The Future of Software Development">‚Äã</a></h2>
<p>The survey provides valuable insights into the current state of software development and offers a glimpse into the future. As AI continues to play a significant role in software development, developers must address ethical concerns and trust issues. Learning resources and cloud platforms will continue to evolve, shaping the way developers learn and build applications. The rise of AI tools and IDEs like VS Code will drive productivity and innovation in the industry. By staying informed and adapting to these trends, developers can navigate the changing landscape of software development in 2024 and beyond.</p>
<p>Get ready for the future of software development!</p>
<p>References:</p>
<ul>
<li><a href="https://survey.stackoverflow.co/2024/" target="_blank" rel="noopener noreferrer">Stack Overflow Developer Survey 2024</a></li>
<li><a href="https://unsplash.com/@dengxiangs" target="_blank" rel="noopener noreferrer">Cover Image Source</a></li>
<li><a href="https://stackoverflow.blog/2024/07/24/developers-want-more-more-more-the-2024-results-from-stack-overflow-s-annual-developer-survey/" target="_blank" rel="noopener noreferrer">2024 Results from Stack Overflow Annual Developer Survey</a></li>
</ul>]]></content:encoded>
            <category>Software Development</category>
            <category>Artificial Intelligence</category>
            <category>PostgreSQL</category>
            <category>JavaScript</category>
            <category>Visual Studio Code</category>
            <category>AI Tools</category>
            <category>Cloud Platforms</category>
        </item>
        <item>
            <title><![CDATA[Strategies for continuous learning and professional growth]]></title>
            <link>https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth</link>
            <guid>https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth</guid>
            <pubDate>Fri, 02 Aug 2024 10:39:40 GMT</pubDate>
            <description><![CDATA[Discover effective strategies for continuous learning and professional growth. Learn how personal projects and innovation can propel your career forward.]]></description>
            <content:encoded><![CDATA[<p>Ever wondered how some people seem to know so much about so many different topics and tools? A couple of my friends have asked me this, especially considering the variety of things I juggle daily at work. Some have even asked me if I have a twin or a clone, or if I ever sleep. The truth is, I'm just a regular person who's passionate about learning and growing. I'm always looking for new ways to improve my skills and knowledge.</p>
<p>Here's my secret: I don't wait for my employer to invest in my professional growth or pay for certifications. Sure, they might provide some learning resources, but those are often too generic. Real learning requires diving deeper, getting your hands dirty, making mistakes, making big efforts, and sometimes sacrificing things like sleep.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-power-of-projects-for-professional-growth">The Power of Projects for Professional Growth<a href="https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth#the-power-of-projects-for-professional-growth" class="hash-link" aria-label="Direct link to The Power of Projects for Professional Growth" title="Direct link to The Power of Projects for Professional Growth">‚Äã</a></h2>
<p>For me, projects are the best way to learn something new. Think about an intern who starts knowing almost nothing. They learn from senior colleagues. But when you're a senior, you need to find new ways to keep growing. Maybe that's through internal gigs at your company or innovation hackathons. The key is to see your projects implemented and released. That's real motivation - seeing your ideas come to life.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="learning-by-doing-to-gain-real-world-experience">Learning by Doing to gain Real-world experience<a href="https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth#learning-by-doing-to-gain-real-world-experience" class="hash-link" aria-label="Direct link to Learning by Doing to gain Real-world experience" title="Direct link to Learning by Doing to gain Real-world experience">‚Äã</a></h3>
<p>I learn by doing. I don't just read about things. I try them out. I experiment. I make mistakes. I learn from those mistakes. I try again. I keep trying until I get it right. I don't give up. I don't get discouraged. I keep going. I keep learning. I keep growing.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-toy-projects">Creating "Toy Projects"<a href="https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth#creating-toy-projects" class="hash-link" aria-label="Direct link to Creating &quot;Toy Projects&quot;" title="Direct link to Creating &quot;Toy Projects&quot;">‚Äã</a></h2>
<p>To learn more about specific things, I create "toy projects." These are small projects that solve the personal problems I face daily. If I see potential in these projects, I keep improving them, learning more and adding features. The challenge, of course, is switching contexts. At work, I deal with many different problems, so I build different "toys" and try to connect them like LEGO pieces to create a more robust solution.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reading-and-watching">Reading and Watching<a href="https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth#reading-and-watching" class="hash-link" aria-label="Direct link to Reading and Watching" title="Direct link to Reading and Watching">‚Äã</a></h2>
<p>I also read a lot. I read books, articles, and blog posts. Mainly, I listen to podcasts, but listening carefully, and gather information and ideas that connect with my projects. I follow people who inspire me and share their knowledge. I'm always looking for new ways to learn and grow.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="your-turn">Your Turn<a href="https://escutia.me/adrian/strategies-for-continuous-learning-and-professional-growth#your-turn" class="hash-link" aria-label="Direct link to Your Turn" title="Direct link to Your Turn">‚Äã</a></h2>
<p>What about you? How do you grow professionally and learn new things? Share your strategies‚ÄîI'd love to hear them!</p>]]></content:encoded>
            <category>Continuous Learning</category>
            <category>Professional Growth</category>
            <category>Personal Projects</category>
            <category>Self-Improvement</category>
            <category>Learning Strategies</category>
            <category>Skill Development</category>
            <category>Career Advancement</category>
            <category>Toy Projects</category>
            <category>Innovation</category>
        </item>
    </channel>
</rss>